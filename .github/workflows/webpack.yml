name: NodeJS with Webpack

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  Branches: master
  MainBranch: master
  NPMRegistry: https://registry.npmjs.org/
  InstallCommand: npm i
  BuildCommand: npm run build
  Output: ./.next

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    
    steps:
        # checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
        
      # set variables
      - name: Set variables
        id: vars
        run: |
          branch=${GITHUB_REF##*/}
          echo ::set-output name=branchName::$branch
           
          if [ "$branch" == "${{ env.MainBranch }}" ]
          then
              echo "::set-output name=versionBump::minor"
          else
              echo "::set-output name=versionBump::patch"
          fi
      - run: |
          echo "Set Variable Checks ${{ github.ref }}"
          echo "Current branch is ${{ steps.vars.outputs.branchName }}"
          echo "Version bump type is ${{ steps.vars.outputs.versionBump }}"          

      # replace text in package.json for main branch
      - name: replace version text for main branch
        if: ${{ steps.vars.outputs.branchName == env.MainBranch }}
        shell: pwsh
        run: (Get-Content -path package.json -Raw) -replace "version patch","version ${{ steps.versionBump.outputs.new_tag }} --no-git-tag-version -f" | Set-Content -Path package.json

      # replace text in package.json for dev branches
      - name: replace tag text for dev branches
        if: ${{ steps.vars.outputs.branchName != env.MainBranch }}
        shell: pwsh
        run: (Get-Content -path package.json -Raw) -replace "--access public","--access public --tag ${{ steps.vars.outputs.branchName }}" | Set-Content -Path package.json

      - name: replace version text for dev branches
        if: ${{ steps.vars.outputs.branchName != env.MainBranch }}
        shell: pwsh
        run: (Get-Content -path package.json -Raw) -replace "version patch","version ${{ steps.versionBump.outputs.new_tag }}-${{ steps.vars.outputs.branchName }} --no-git-tag-version -f" | Set-Content -Path package.json

      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn build

      # install npm dependencies from package-lock.json
      - name: npm install
        if: ${{ !!env.InstallCommand }}
        run: ${{ env.InstallCommand }}

      # build npm
      - name: npm build
        if: ${{ !!env.BuildCommand }}
        run: ${{ env.BuildCommand }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ github.event.organization.name }}-${{ github.event.repository.name }}
          path: ${{ env.Output }}

